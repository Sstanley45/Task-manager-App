{"ast":null,"code":"var _jsxFileName = \"/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { SHOW_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR, LOGIN_USER_BEGIN, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, FETCH_USER_TASKS_BEGIN, FETCH_USER_TASKS_SUCCESS, FETCH_USER_TASKS_ERROR, CREATE_TASK_BEGIN, CREATE_TASK_SUCCESS, CREATE_TASK_ERROR, DELETE_TASK_BEGIN, DELETE_TASK_SUCCESS, DELETE_TASK_ERROR, UPDATE_TASK_BEGIN, UPDATE_TASK_SUCCESS, UPDATE_TASK_ERROR } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\nexport const AppContext = /*#__PURE__*/createContext();\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token,\n  userTasks: []\n};\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const navigate = use;\n  const displayAlert = () => {\n    dispatch({\n      type: SHOW_ALERT\n    });\n    clearAlert();\n  };\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({\n        type: CLEAR_ALERT\n      });\n    }, 3000);\n  };\n  const addToLocalStorage = _ref2 => {\n    let {\n      user,\n      token\n    } = _ref2;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  const registerUser = async currentUser => {\n    dispatch({\n      type: REGISTER_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const loginUser = async currentUser => {\n    dispatch({\n      type: LOGIN_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const {\n        token,\n        user\n      } = response.data;\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const authFetch = axios.create({\n    baseURL: \"/api/v1\"\n  });\n  axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n  authFetch.interceptors.request.use(config => {\n    authFetch.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  authFetch.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    console.log('interceptor error on response', error);\n    if (error.response.status === 401) {\n      console.log(\"AUTH ERROR\");\n      //logOut user eventually............\n    }\n\n    return Promise.reject(error);\n  });\n  const fetchTasks = async () => {\n    dispatch({\n      type: FETCH_USER_TASKS_BEGIN\n    });\n    try {\n      const response = await authFetch.get(\"/tasks\");\n      const data = response.data;\n      dispatch({\n        type: FETCH_USER_TASKS_SUCCESS,\n        payload: data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: FETCH_USER_TASKS_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n      console.log(error);\n    }\n  };\n  const createTask = async currentTask => {\n    dispatch({\n      type: CREATE_TASK_BEGIN\n    });\n    try {\n      const response = await authFetch.post(\"/tasks\", {\n        name: currentTask\n      });\n      const data = await response.data;\n      const {\n        name\n      } = data.task;\n      dispatch({\n        type: CREATE_TASK_SUCCESS,\n        payload: name\n      });\n    } catch (error) {\n      console.log('error when creating task', error.response);\n      dispatch({\n        type: CREATE_TASK_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n    clearAlert();\n  };\n  const deleteTask = async id => {\n    dispatch({\n      type: DELETE_TASK_BEGIN\n    });\n    try {\n      const response = await authFetch.delete(`/tasks/${id}`);\n      const data = response.data;\n      dispatch({\n        type: DELETE_TASK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log('error when deleting a task', error);\n      dispatch({\n        type: DELETE_TASK_ERROR\n      });\n    }\n    clearAlert();\n  };\n  const updateTask = async (id, editedTask) => {\n    dispatch({\n      type: UPDATE_TASK_BEGIN\n    });\n    try {\n      const response = await authFetch.patch(`/tasks/${id}`, {\n        name: editedTask\n      });\n      const data = response.data;\n      dispatch({\n        type: UPDATE_TASK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log('error when updating the task', error);\n      dispatch({\n        type: UPDATE_TASK_ERROR,\n        payload: error.response.data\n      });\n    }\n    clearAlert();\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      displayAlert,\n      clearAlert,\n      removeFromLocalStorage,\n      registerUser,\n      loginUser,\n      fetchTasks,\n      createTask,\n      deleteTask,\n      updateTask,\n      removeFromLocalStorage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","createContext","reducer","axios","useNavigate","SHOW_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGIN_USER_BEGIN","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","FETCH_USER_TASKS_BEGIN","FETCH_USER_TASKS_SUCCESS","FETCH_USER_TASKS_ERROR","CREATE_TASK_BEGIN","CREATE_TASK_SUCCESS","CREATE_TASK_ERROR","DELETE_TASK_BEGIN","DELETE_TASK_SUCCESS","DELETE_TASK_ERROR","UPDATE_TASK_BEGIN","UPDATE_TASK_SUCCESS","UPDATE_TASK_ERROR","user","localStorage","getItem","token","AppContext","initialState","isLoading","showAlert","alertType","alertText","JSON","parse","userTasks","AppProvider","children","state","dispatch","navigate","use","displayAlert","type","clearAlert","setTimeout","addToLocalStorage","setItem","stringify","removeFromLocalStorage","removeItem","registerUser","currentUser","response","post","data","payload","error","msg","loginUser","authFetch","create","baseURL","defaults","headers","common","interceptors","request","config","Promise","reject","console","log","status","fetchTasks","get","tasks","createTask","currentTask","name","task","deleteTask","id","delete","updateTask","editedTask","patch"],"sources":["/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js"],"sourcesContent":["import React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport {\n  SHOW_ALERT,\n  CLEAR_ALERT,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  FETCH_USER_TASKS_BEGIN,\n  FETCH_USER_TASKS_SUCCESS,\n  FETCH_USER_TASKS_ERROR,\n  CREATE_TASK_BEGIN,\n  CREATE_TASK_SUCCESS,\n  CREATE_TASK_ERROR,\n  DELETE_TASK_BEGIN,\n  DELETE_TASK_SUCCESS,\n  DELETE_TASK_ERROR,\n  UPDATE_TASK_BEGIN,\n  UPDATE_TASK_SUCCESS,\n UPDATE_TASK_ERROR,\n} from \"./actions\";\n\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\n\nexport const AppContext = createContext();\n\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token,\n  userTasks: [],\n};\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const navigate = use\n  const displayAlert = () => {\n    dispatch({ type: SHOW_ALERT });\n    clearAlert();\n  };\n\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({ type: CLEAR_ALERT });\n    }, 3000);\n  };\n\n  const addToLocalStorage = ({ user, token }) => {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n\n  };\n\n  const registerUser = async (currentUser) => { \n    dispatch({ type: REGISTER_USER_BEGIN });\n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const { user, token } = response.data;\n      dispatch({ type: REGISTER_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n    clearAlert();\n  };\n\n  const loginUser = async (currentUser) => {\n    dispatch({ type: LOGIN_USER_BEGIN });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const { token, user } = response.data;\n      dispatch({ type: LOGIN_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n    clearAlert();\n  };\n\n  const authFetch = axios.create({\n    baseURL: \"/api/v1\",\n  });\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\n  authFetch.interceptors.request.use(\n     (config) => {\n      authFetch.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  authFetch.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      console.log('interceptor error on response',error);\n      if (error.response.status === 401) {\n        console.log(\"AUTH ERROR\");\n        //logOut user eventually............\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const fetchTasks = async () => {\n    dispatch({ type: FETCH_USER_TASKS_BEGIN });\n    try {\n      const response = await authFetch.get(\"/tasks\");\n      const data = response.data;\n      dispatch({ type: FETCH_USER_TASKS_SUCCESS, payload: data.tasks });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: FETCH_USER_TASKS_ERROR, \n        payload: { msg: error.response.data.msg },\n      });\n      console.log(error);\n    }\n  };\n\n  const createTask = async (currentTask) => { \n    dispatch({ type: CREATE_TASK_BEGIN });\n    try {\n      const response = await authFetch.post(\"/tasks\", { name: currentTask });\n      const data = await response.data; \n      const {name} = data.task\n      dispatch({ type: CREATE_TASK_SUCCESS, payload: name });\n    } catch (error) {\n      console.log('error when creating task',error.response);\n      dispatch({type: CREATE_TASK_ERROR, payload:error.response.data.msg})\n    }\n    clearAlert() \n  }\n   \n  const deleteTask = async (id) => { \n    dispatch({ type: DELETE_TASK_BEGIN })\n    try {\n      const response = await authFetch.delete(`/tasks/${id}`)\n      const data = response.data \n      dispatch({type:DELETE_TASK_SUCCESS, payload : data})\n    } catch (error) {\n      console.log('error when deleting a task', error);\n      dispatch({type:DELETE_TASK_ERROR}) \n    }\n    clearAlert()\n  }\n\n  const updateTask = async (id, editedTask) => {\n    dispatch({ type: UPDATE_TASK_BEGIN })\n    try {\n      const response = await authFetch.patch(`/tasks/${id}`, {name : editedTask})\n      const data = response.data \n      dispatch({type: UPDATE_TASK_SUCCESS, payload: data}) \n    } catch (error) {\n      console.log('error when updating the task', error);\n      dispatch({type: UPDATE_TASK_ERROR, payload: error.response.data})\n    }\n    clearAlert()\n  }\n\n\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        displayAlert,\n        clearAlert,\n        removeFromLocalStorage,\n        registerUser,\n        loginUser,\n        fetchTasks,\n        createTask,\n        deleteTask,\n        updateTask,\n        removeFromLocalStorage,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,UAAU,EACVC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,mBAAmB,EACnBC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,sBAAsB,EACtBC,wBAAwB,EACxBC,sBAAsB,EACtBC,iBAAiB,EACjBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,mBAAmB,EACpBC,iBAAiB,QACX,WAAW;AAAC;AAEnB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,OAAO,MAAME,UAAU,gBAAG5B,aAAa,EAAE;AAEzC,OAAO,MAAM6B,YAAY,GAAG;EAC1BC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EACbH,SAAS,EAAE,KAAK;EAChBN,IAAI,EAAEA,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACX,IAAI,CAAC,GAAG,IAAI;EACpCG,KAAK,EAAEA,KAAK;EACZS,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,UAAU,CAACE,OAAO,EAAE4B,YAAY,CAAC;EAE3D,MAAMY,QAAQ,GAAGC,GAAG;EACpB,MAAMC,YAAY,GAAG,MAAM;IACzBH,QAAQ,CAAC;MAAEI,IAAI,EAAExC;IAAW,CAAC,CAAC;IAC9ByC,UAAU,EAAE;EACd,CAAC;EAED,MAAMA,UAAU,GAAG,MAAM;IACvBC,UAAU,CAAC,MAAM;MACfN,QAAQ,CAAC;QAAEI,IAAI,EAAEvC;MAAY,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM0C,iBAAiB,GAAG,SAAqB;IAAA,IAApB;MAAEvB,IAAI;MAAEG;IAAM,CAAC;IACxCF,YAAY,CAACuB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACzB,IAAI,CAAC,CAAC;IAClDC,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAErB,KAAK,CAAC;EACtC,CAAC;EACD,MAAMuB,sBAAsB,GAAG,MAAM;IACnCzB,YAAY,CAAC0B,UAAU,CAAC,MAAM,CAAC;IAC/B1B,YAAY,CAAC0B,UAAU,CAAC,OAAO,CAAC;EAElC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1Cb,QAAQ,CAAC;MAAEI,IAAI,EAAEtC;IAAoB,CAAC,CAAC;IACvC,IAAI;MACF,MAAMgD,QAAQ,GAAG,MAAMpD,KAAK,CAACqD,IAAI,CAAC,uBAAuB,EAAEF,WAAW,CAAC;MACvE,MAAM;QAAE7B,IAAI;QAAEG;MAAM,CAAC,GAAG2B,QAAQ,CAACE,IAAI;MACrChB,QAAQ,CAAC;QAAEI,IAAI,EAAErC,qBAAqB;QAAEkD,OAAO,EAAE;UAAEjC,IAAI;UAAEG;QAAM;MAAE,CAAC,CAAC;MACnEoB,iBAAiB,CAAC;QAAEvB,IAAI;QAAEG;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdlB,QAAQ,CAAC;QACPI,IAAI,EAAEpC,mBAAmB;QACzBiD,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;IACJ;IACAd,UAAU,EAAE;EACd,CAAC;EAED,MAAMe,SAAS,GAAG,MAAOP,WAAW,IAAK;IACvCb,QAAQ,CAAC;MAAEI,IAAI,EAAEnC;IAAiB,CAAC,CAAC;IACpC,IAAI;MACF,MAAM6C,QAAQ,GAAG,MAAMpD,KAAK,CAACqD,IAAI,CAAC,oBAAoB,EAAEF,WAAW,CAAC;MACpE,MAAM;QAAE1B,KAAK;QAAEH;MAAK,CAAC,GAAG8B,QAAQ,CAACE,IAAI;MACrChB,QAAQ,CAAC;QAAEI,IAAI,EAAElC,kBAAkB;QAAE+C,OAAO,EAAE;UAAEjC,IAAI;UAAEG;QAAM;MAAE,CAAC,CAAC;MAChEoB,iBAAiB,CAAC;QAAEvB,IAAI;QAAEG;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdlB,QAAQ,CAAC;QACPI,IAAI,EAAEjC,gBAAgB;QACtB8C,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;IACJ;IACAd,UAAU,EAAE;EACd,CAAC;EAED,MAAMgB,SAAS,GAAG3D,KAAK,CAAC4D,MAAM,CAAC;IAC7BC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF7D,KAAK,CAAC8D,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAAS3B,KAAK,CAACZ,KAAM,EAAC;EACxEkC,SAAS,CAACM,YAAY,CAACC,OAAO,CAAC1B,GAAG,CAC9B2B,MAAM,IAAK;IACXR,SAAS,CAACG,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAAS3B,KAAK,CAACZ,KAAM,EAAC;IAC5E,OAAO0C,MAAM;EACf,CAAC,EACAX,KAAK,IAAK;IACT,OAAOY,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;EAC9B,CAAC,CACF;EAEDG,SAAS,CAACM,YAAY,CAACb,QAAQ,CAACZ,GAAG,CAChCY,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACAI,KAAK,IAAK;IACTc,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAACf,KAAK,CAAC;IAClD,IAAIA,KAAK,CAACJ,QAAQ,CAACoB,MAAM,KAAK,GAAG,EAAE;MACjCF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB;IACF;;IACA,OAAOH,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;EAC9B,CAAC,CACF;EAED,MAAMiB,UAAU,GAAG,YAAY;IAC7BnC,QAAQ,CAAC;MAAEI,IAAI,EAAEhC;IAAuB,CAAC,CAAC;IAC1C,IAAI;MACF,MAAM0C,QAAQ,GAAG,MAAMO,SAAS,CAACe,GAAG,CAAC,QAAQ,CAAC;MAC9C,MAAMpB,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BhB,QAAQ,CAAC;QAAEI,IAAI,EAAE/B,wBAAwB;QAAE4C,OAAO,EAAED,IAAI,CAACqB;MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdc,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;MAClBlB,QAAQ,CAAC;QACPI,IAAI,EAAE9B,sBAAsB;QAC5B2C,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMoB,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxCvC,QAAQ,CAAC;MAAEI,IAAI,EAAE7B;IAAkB,CAAC,CAAC;IACrC,IAAI;MACF,MAAMuC,QAAQ,GAAG,MAAMO,SAAS,CAACN,IAAI,CAAC,QAAQ,EAAE;QAAEyB,IAAI,EAAED;MAAY,CAAC,CAAC;MACtE,MAAMvB,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;MAChC,MAAM;QAACwB;MAAI,CAAC,GAAGxB,IAAI,CAACyB,IAAI;MACxBzC,QAAQ,CAAC;QAAEI,IAAI,EAAE5B,mBAAmB;QAAEyC,OAAO,EAAEuB;MAAK,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdc,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACf,KAAK,CAACJ,QAAQ,CAAC;MACtDd,QAAQ,CAAC;QAACI,IAAI,EAAE3B,iBAAiB;QAAEwC,OAAO,EAACC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;MAAG,CAAC,CAAC;IACtE;IACAd,UAAU,EAAE;EACd,CAAC;EAED,MAAMqC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B3C,QAAQ,CAAC;MAAEI,IAAI,EAAE1B;IAAkB,CAAC,CAAC;IACrC,IAAI;MACF,MAAMoC,QAAQ,GAAG,MAAMO,SAAS,CAACuB,MAAM,CAAE,UAASD,EAAG,EAAC,CAAC;MACvD,MAAM3B,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BhB,QAAQ,CAAC;QAACI,IAAI,EAACzB,mBAAmB;QAAEsC,OAAO,EAAGD;MAAI,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdc,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEf,KAAK,CAAC;MAChDlB,QAAQ,CAAC;QAACI,IAAI,EAACxB;MAAiB,CAAC,CAAC;IACpC;IACAyB,UAAU,EAAE;EACd,CAAC;EAED,MAAMwC,UAAU,GAAG,OAAOF,EAAE,EAAEG,UAAU,KAAK;IAC3C9C,QAAQ,CAAC;MAAEI,IAAI,EAAEvB;IAAkB,CAAC,CAAC;IACrC,IAAI;MACF,MAAMiC,QAAQ,GAAG,MAAMO,SAAS,CAAC0B,KAAK,CAAE,UAASJ,EAAG,EAAC,EAAE;QAACH,IAAI,EAAGM;MAAU,CAAC,CAAC;MAC3E,MAAM9B,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BhB,QAAQ,CAAC;QAACI,IAAI,EAAEtB,mBAAmB;QAAEmC,OAAO,EAAED;MAAI,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdc,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEf,KAAK,CAAC;MAClDlB,QAAQ,CAAC;QAACI,IAAI,EAAErB,iBAAiB;QAAEkC,OAAO,EAAEC,KAAK,CAACJ,QAAQ,CAACE;MAAI,CAAC,CAAC;IACnE;IACAX,UAAU,EAAE;EACd,CAAC;EAID,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MACL,GAAGN,KAAK;MACRI,YAAY;MACZE,UAAU;MACVK,sBAAsB;MACtBE,YAAY;MACZQ,SAAS;MACTe,UAAU;MACVG,UAAU;MACVI,UAAU;MACVG,UAAU;MACVnC;IACF,CAAE;IAAA,UAEDZ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GAnKID,WAAW;AAAA,KAAXA,WAAW;AAqKjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}