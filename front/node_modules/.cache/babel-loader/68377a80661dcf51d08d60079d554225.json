{"ast":null,"code":"var _jsxFileName = \"/home/stanley/Mern/Task-manager/front/src/contexts/appContext.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: '',\n  alertText: ''\n};\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const showAlert = () => {\n    dispatch({\n      type: SHOW_\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","createContext","reducer","AppContext","initialState","isLoading","showAlert","alertType","alertText","AppProvider","children","state","dispatch","type","SHOW_"],"sources":["/home/stanley/Mern/Task-manager/front/src/contexts/appContext.js"],"sourcesContent":["import React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\n\n\n\nexport const AppContext = createContext(); \n\nconst initialState = {   \n    isLoading: false,\n    showAlert: false,\n    alertType: '',\n    alertText: '',\n};\n  \nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n    \n    const showAlert = () => {\n        dispatch({type:SHOW_})\n    }\n  return (\n      <AppContext.Provider value={{...state}}>   \n          {children}    \n      </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAIhC,OAAO,MAAMC,UAAU,gBAAGF,aAAa,EAAE;AAEzC,MAAMG,YAAY,GAAG;EACjBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACE,OAAO,EAAEE,YAAY,CAAC;EAGzD,MAAME,SAAS,GAAG,MAAM;IACpBM,QAAQ,CAAC;MAACC,IAAI,EAACC;IAAK,CAAC,CAAC;EAC1B,CAAC;EACH,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAC,GAAGH;IAAK,CAAE;IAAA,UAClCD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE5B,CAAC;AAAC,GAZID,WAAW;AAAA,KAAXA,WAAW;AAcjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}