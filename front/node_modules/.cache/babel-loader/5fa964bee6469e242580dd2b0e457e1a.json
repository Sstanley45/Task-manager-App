{"ast":null,"code":"var _jsxFileName = \"/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { SHOW_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR, LOGIN_USER_BEGIN, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\nexport const AppContext = /*#__PURE__*/createContext();\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token\n};\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const displayAlert = () => {\n    dispatch({\n      type: SHOW_ALERT\n    });\n    clearAlert();\n  };\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({\n        type: CLEAR_ALERT\n      });\n    }, 3000);\n  };\n  const addToLocalStorage = _ref2 => {\n    let {\n      user,\n      token\n    } = _ref2;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  const registerUser = async currentUser => {\n    dispatch({\n      type: REGISTER_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const loginUser = async currentUser => {\n    dispatch({\n      type: LOGIN_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const {\n        token,\n        user\n      } = response.data;\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const authFetch = axios.create({\n    baseURL: \"/api/v1\"\n  });\n  authFetch.interceptors.request.use(function (config) {\n    config => {\n      config.headers.common['Authorization'] = `Bearer ${token}`;\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    };\n  });\n  authFetch.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    console.log(error.response);\n    if (error.response.status === 401) {\n      console.log('');\n    }\n  });\n  const fetchTasks = async () => {\n    try {\n      const response = await authFetch.get(\"/tasks\");\n      const data = response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      displayAlert,\n      clearAlert,\n      removeFromLocalStorage,\n      registerUser,\n      loginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","createContext","reducer","axios","SHOW_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGIN_USER_BEGIN","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","user","localStorage","getItem","token","AppContext","initialState","isLoading","showAlert","alertType","alertText","JSON","parse","AppProvider","children","state","dispatch","displayAlert","type","clearAlert","setTimeout","addToLocalStorage","setItem","stringify","removeFromLocalStorage","removeItem","registerUser","currentUser","response","post","data","payload","error","msg","loginUser","authFetch","create","baseURL","interceptors","request","use","config","headers","common","Promise","reject","console","log","status","fetchTasks","get"],"sources":["/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js"],"sourcesContent":["import React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\n\n\nimport {\n  SHOW_ALERT,\n  CLEAR_ALERT,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n} from \"./actions\";\n\n\n\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\n\nexport const AppContext = createContext();\n\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token,\n};\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const displayAlert = () => {\n    dispatch({ type: SHOW_ALERT });\n    clearAlert();\n  };\n\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({ type: CLEAR_ALERT });\n    },3000)\n  };\n\n  const addToLocalStorage = ({ user, token }) => {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  }; \n\n  const registerUser = async (currentUser) => {\n    dispatch({ type: REGISTER_USER_BEGIN });  \n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const { user, token } = response.data;\n      dispatch({ type: REGISTER_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n   clearAlert();\n  };\n\n  const loginUser = async (currentUser) => {\n    dispatch({ type: LOGIN_USER_BEGIN });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const { token, user } = response.data;\n      dispatch({ type: LOGIN_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n    clearAlert();\n  };\n\n\nconst authFetch = axios.create({\n  baseURL: \"/api/v1\",\n});\n  \n  authFetch.interceptors.request.use( function (config) {\n  (config) => {\n    config.headers.common['Authorization'] = `Bearer ${token}`\n    return config\n  },\n    (error) => {\n      return Promise.reject(error)\n    }\n  })\n\n  authFetch.interceptors.response.use((response) => {\n    return response\n  },\n    (error) => {\n      console.log(error.response);\n      if (error.response.status === 401) {\n        console.log('');\n      }\n    }\n  )\n  \n  \n  \n  \n  \n\n\nconst fetchTasks = async () => {\n  try {\n    const response = await authFetch.get(\"/tasks\");\n    const data = response.data;\n   \n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\n\n\n\n\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        displayAlert,\n        clearAlert,\n        removeFromLocalStorage,\n        registerUser,\n        loginUser,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}