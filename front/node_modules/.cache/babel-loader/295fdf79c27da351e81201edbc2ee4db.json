{"ast":null,"code":"var _jsxFileName = \"/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { SHOW_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR, LOGIN_USER_BEGIN, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, FETCH_USER_TASKS_BEGIN, FETCH_USER_TASKS_SUCCESS, FETCH_USER_TASKS_ERROR, CREATE_TASK_BEGIN, CREATE_TASK_SUCCESS, CREATE_TASK_ERROR } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\nexport const AppContext = /*#__PURE__*/createContext();\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token,\n  userTasks: []\n};\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const displayAlert = () => {\n    dispatch({\n      type: SHOW_ALERT\n    });\n    clearAlert();\n  };\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({\n        type: CLEAR_ALERT\n      });\n    }, 3000);\n  };\n  const addToLocalStorage = _ref2 => {\n    let {\n      user,\n      token\n    } = _ref2;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  const registerUser = async currentUser => {\n    dispatch({\n      type: REGISTER_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const loginUser = async currentUser => {\n    dispatch({\n      type: LOGIN_USER_BEGIN\n    });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const {\n        token,\n        user\n      } = response.data;\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const authFetch = axios.create({\n    baseURL: \"/api/v1\"\n  });\n  axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n  authFetch.interceptors.request.use(config => {\n    authFetch.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  authFetch.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    console.log('interceptor error on response', error);\n    if (error.response.status === 401) {\n      console.log(\"AUTH ERROR\");\n      //logOut user eventually............\n    }\n\n    return Promise.reject(error);\n  });\n  const fetchTasks = async () => {\n    dispatch({\n      type: FETCH_USER_TASKS_BEGIN\n    });\n    try {\n      const response = await authFetch.get(\"/tasks\");\n      const data = response.data;\n      dispatch({\n        type: FETCH_USER_TASKS_SUCCESS,\n        payload: data.tasks\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: FETCH_USER_TASKS_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n      console.log(error);\n    }\n  };\n  const createTask = async currentTask => {\n    dispatch({\n      type: CREATE_TASK_BEGIN\n    });\n    try {\n      const response = await authFetch.post(\"/tasks\", {\n        name: currentTask\n      });\n      const data = await response.data;\n      console.log(data);\n      dispatch({\n        type: CREATE_TASK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: CREATE_TASK_ERROR\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      displayAlert,\n      clearAlert,\n      removeFromLocalStorage,\n      registerUser,\n      loginUser,\n      fetchTasks,\n      createTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","createContext","reducer","axios","SHOW_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGIN_USER_BEGIN","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","FETCH_USER_TASKS_BEGIN","FETCH_USER_TASKS_SUCCESS","FETCH_USER_TASKS_ERROR","CREATE_TASK_BEGIN","CREATE_TASK_SUCCESS","CREATE_TASK_ERROR","user","localStorage","getItem","token","AppContext","initialState","isLoading","showAlert","alertType","alertText","JSON","parse","userTasks","AppProvider","children","state","dispatch","displayAlert","type","clearAlert","setTimeout","addToLocalStorage","setItem","stringify","removeFromLocalStorage","removeItem","registerUser","currentUser","response","post","data","payload","error","msg","loginUser","authFetch","create","baseURL","defaults","headers","common","interceptors","request","use","config","Promise","reject","console","log","status","fetchTasks","get","tasks","createTask","currentTask","name"],"sources":["/home/stanley/Projects/Mern/Task-manager/front/src/contexts/appContext.js"],"sourcesContent":["import React from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\n\nimport {\n  SHOW_ALERT,\n  CLEAR_ALERT,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  FETCH_USER_TASKS_BEGIN,\n  FETCH_USER_TASKS_SUCCESS,\n  FETCH_USER_TASKS_ERROR,\n  CREATE_TASK_BEGIN,\n  CREATE_TASK_SUCCESS,\n  CREATE_TASK_ERROR\n} from \"./actions\";\n\nconst user = localStorage.getItem(\"user\");\nconst token = localStorage.getItem(\"token\");\n\nexport const AppContext = createContext();\n\nexport const initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertType: \"\",\n  alertText: \"\",\n  isLoading: false,\n  user: user ? JSON.parse(user) : null,\n  token: token,\n  userTasks: [],\n};\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const displayAlert = () => {\n    dispatch({ type: SHOW_ALERT });\n    clearAlert();\n  };\n\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({ type: CLEAR_ALERT });\n    }, 3000);\n  };\n\n  const addToLocalStorage = ({ user, token }) => {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeFromLocalStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n\n  const registerUser = async (currentUser) => { \n    dispatch({ type: REGISTER_USER_BEGIN });\n    try {\n      const response = await axios.post(\"/api/v1/auth/register\", currentUser);\n      const { user, token } = response.data;\n      dispatch({ type: REGISTER_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n    clearAlert();\n  };\n\n  const loginUser = async (currentUser) => {\n    dispatch({ type: LOGIN_USER_BEGIN });\n    try {\n      const response = await axios.post(\"/api/v1/auth/login\", currentUser);\n      const { token, user } = response.data;\n      dispatch({ type: LOGIN_USER_SUCCESS, payload: { user, token } });\n      addToLocalStorage({ user, token });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: { msg: error.response.data.msg },\n      });\n    }\n    clearAlert();\n  };\n\n  const authFetch = axios.create({\n    baseURL: \"/api/v1\",\n  });\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\n  authFetch.interceptors.request.use(\n     (config) => {\n      authFetch.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  authFetch.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      console.log('interceptor error on response',error);\n      if (error.response.status === 401) {\n        console.log(\"AUTH ERROR\");\n        //logOut user eventually............\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const fetchTasks = async () => {\n    dispatch({ type: FETCH_USER_TASKS_BEGIN });\n    try {\n      const response = await authFetch.get(\"/tasks\");\n      const data = response.data;\n      dispatch({ type: FETCH_USER_TASKS_SUCCESS, payload: data.tasks });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: FETCH_USER_TASKS_ERROR, \n        payload: { msg: error.response.data.msg },\n      });\n      console.log(error);\n    }\n  };\n\n  const createTask = async (currentTask) => {\n \n    dispatch({ type: CREATE_TASK_BEGIN });\n    try {\n      const response = await authFetch.post(\"/tasks\", { name: currentTask });\n      const data = await response.data;\n      console.log(data);\n      \n      dispatch({type: CREATE_TASK_SUCCESS, payload : data}) \n    } catch (error) {\n      console.log(error.response);\n      dispatch({type: CREATE_TASK_ERROR})\n    }\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        displayAlert,\n        clearAlert,\n        removeFromLocalStorage,\n        registerUser,\n        loginUser,\n        fetchTasks,\n        createTask,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,UAAU,EACVC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,mBAAmB,EACnBC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,sBAAsB,EACtBC,wBAAwB,EACxBC,sBAAsB,EACtBC,iBAAiB,EACjBC,mBAAmB,EACnBC,iBAAiB,QACZ,WAAW;AAAC;AAEnB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,OAAO,MAAME,UAAU,gBAAGrB,aAAa,EAAE;AAEzC,OAAO,MAAMsB,YAAY,GAAG;EAC1BC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EACbH,SAAS,EAAE,KAAK;EAChBN,IAAI,EAAEA,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACX,IAAI,CAAC,GAAG,IAAI;EACpCG,KAAK,EAAEA,KAAK;EACZS,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,UAAU,CAACE,OAAO,EAAEqB,YAAY,CAAC;EAE3D,MAAMY,YAAY,GAAG,MAAM;IACzBD,QAAQ,CAAC;MAAEE,IAAI,EAAEhC;IAAW,CAAC,CAAC;IAC9BiC,UAAU,EAAE;EACd,CAAC;EAED,MAAMA,UAAU,GAAG,MAAM;IACvBC,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC;QAAEE,IAAI,EAAE/B;MAAY,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMkC,iBAAiB,GAAG,SAAqB;IAAA,IAApB;MAAErB,IAAI;MAAEG;IAAM,CAAC;IACxCF,YAAY,CAACqB,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACvB,IAAI,CAAC,CAAC;IAClDC,YAAY,CAACqB,OAAO,CAAC,OAAO,EAAEnB,KAAK,CAAC;EACtC,CAAC;EACD,MAAMqB,sBAAsB,GAAG,MAAM;IACnCvB,YAAY,CAACwB,UAAU,CAAC,MAAM,CAAC;IAC/BxB,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1CX,QAAQ,CAAC;MAAEE,IAAI,EAAE9B;IAAoB,CAAC,CAAC;IACvC,IAAI;MACF,MAAMwC,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAI,CAAC,uBAAuB,EAAEF,WAAW,CAAC;MACvE,MAAM;QAAE3B,IAAI;QAAEG;MAAM,CAAC,GAAGyB,QAAQ,CAACE,IAAI;MACrCd,QAAQ,CAAC;QAAEE,IAAI,EAAE7B,qBAAqB;QAAE0C,OAAO,EAAE;UAAE/B,IAAI;UAAEG;QAAM;MAAE,CAAC,CAAC;MACnEkB,iBAAiB,CAAC;QAAErB,IAAI;QAAEG;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdhB,QAAQ,CAAC;QACPE,IAAI,EAAE5B,mBAAmB;QACzByC,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;IACJ;IACAd,UAAU,EAAE;EACd,CAAC;EAED,MAAMe,SAAS,GAAG,MAAOP,WAAW,IAAK;IACvCX,QAAQ,CAAC;MAAEE,IAAI,EAAE3B;IAAiB,CAAC,CAAC;IACpC,IAAI;MACF,MAAMqC,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAI,CAAC,oBAAoB,EAAEF,WAAW,CAAC;MACpE,MAAM;QAAExB,KAAK;QAAEH;MAAK,CAAC,GAAG4B,QAAQ,CAACE,IAAI;MACrCd,QAAQ,CAAC;QAAEE,IAAI,EAAE1B,kBAAkB;QAAEuC,OAAO,EAAE;UAAE/B,IAAI;UAAEG;QAAM;MAAE,CAAC,CAAC;MAChEkB,iBAAiB,CAAC;QAAErB,IAAI;QAAEG;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdhB,QAAQ,CAAC;QACPE,IAAI,EAAEzB,gBAAgB;QACtBsC,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;IACJ;IACAd,UAAU,EAAE;EACd,CAAC;EAED,MAAMgB,SAAS,GAAGlD,KAAK,CAACmD,MAAM,CAAC;IAC7BC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFpD,KAAK,CAACqD,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASzB,KAAK,CAACZ,KAAM,EAAC;EACxEgC,SAAS,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;IACXT,SAAS,CAACG,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASzB,KAAK,CAACZ,KAAM,EAAC;IAC5E,OAAOyC,MAAM;EACf,CAAC,EACAZ,KAAK,IAAK;IACT,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;EAC9B,CAAC,CACF;EAEDG,SAAS,CAACM,YAAY,CAACb,QAAQ,CAACe,GAAG,CAChCf,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACAI,KAAK,IAAK;IACTe,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAChB,KAAK,CAAC;IAClD,IAAIA,KAAK,CAACJ,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;MACjCF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB;IACF;;IACA,OAAOH,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;EAC9B,CAAC,CACF;EAED,MAAMkB,UAAU,GAAG,YAAY;IAC7BlC,QAAQ,CAAC;MAAEE,IAAI,EAAExB;IAAuB,CAAC,CAAC;IAC1C,IAAI;MACF,MAAMkC,QAAQ,GAAG,MAAMO,SAAS,CAACgB,GAAG,CAAC,QAAQ,CAAC;MAC9C,MAAMrB,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1Bd,QAAQ,CAAC;QAAEE,IAAI,EAAEvB,wBAAwB;QAAEoC,OAAO,EAAED,IAAI,CAACsB;MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACde,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;MAClBhB,QAAQ,CAAC;QACPE,IAAI,EAAEtB,sBAAsB;QAC5BmC,OAAO,EAAE;UAAEE,GAAG,EAAED,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG;QAAI;MAC1C,CAAC,CAAC;MACFc,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMqB,UAAU,GAAG,MAAOC,WAAW,IAAK;IAExCtC,QAAQ,CAAC;MAAEE,IAAI,EAAErB;IAAkB,CAAC,CAAC;IACrC,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAMO,SAAS,CAACN,IAAI,CAAC,QAAQ,EAAE;QAAE0B,IAAI,EAAED;MAAY,CAAC,CAAC;MACtE,MAAMxB,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;MAChCiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC;MAEjBd,QAAQ,CAAC;QAACE,IAAI,EAAEpB,mBAAmB;QAAEiC,OAAO,EAAGD;MAAI,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACde,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACJ,QAAQ,CAAC;MAC3BZ,QAAQ,CAAC;QAACE,IAAI,EAAEnB;MAAiB,CAAC,CAAC;IACrC;EACF,CAAC;EAED,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MACL,GAAGgB,KAAK;MACRE,YAAY;MACZE,UAAU;MACVK,sBAAsB;MACtBE,YAAY;MACZQ,SAAS;MACTgB,UAAU;MACVG;IACF,CAAE;IAAA,UAEDvC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GAnIID,WAAW;AAAA,KAAXA,WAAW;AAqIjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}